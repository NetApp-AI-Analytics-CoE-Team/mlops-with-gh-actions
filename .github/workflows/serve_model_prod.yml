on:
  pull_request:
    branches:
      - master
    types: [closed]
jobs:
  serving_to_production:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    environment:
      name: Production
    steps:
      # This step clones the branch of the PR associated with the triggering phrase, but only if it is triggered.
      - name: clone branch of PR
        uses: actions/checkout@v3
      - name: output repository name
        id: output_repository_name
        # from OWNER/REPOSITORY format, get only REPOSITORY name
        run: | 
          REPONAME=`echo ${{ github.repository }} | cut -f 2 -d "/" -`
          echo "repository_name=`echo $REPONAME | sed -e s/_/-/g`" >> $GITHUB_OUTPUT
      # get latest model's s3 uri
      - name: get latest artifact uri
        id: output_model_uri
        run: |
          MODEL_URI=`python3 ./github_actions/get_latest_artifacts_uri.py --bucket=mlops-artifacts-22 --prefix=flower-classifier/`
          echo "model_uri=`echo $MODEL_URI`" >> $GITHUB_OUTPUT
      # deploy inference service
      - name: deploy model by KServe
        run: python3 ./github_actions/deploy_model.py --namespace=${{ secrets.NAMESPACE }} --region=${{ secrets.ARTIFACT_REPO_REGION }} --access-key-base64=${{ secrets.ARTIFACT_REPO_ACCESS_KEY_BASE64 }} --secret-key-base64=${{ secrets.ARTIFACT_REPO_SECRET_KEY_BASE64 }} --model-name=${{ steps.output_repository_name.outputs.repository_name}} --model-uri=${{ steps.output_model_uri.outputs.model_uri }}
      - name: output virtual hostname
        id: output_virtual_hostname
        run: echo "virtual_hostname=`echo ${{ steps.output_repository_name.outputs.repository_name}}.${{ secrets.NAMESPACE }}.example.com`" >> $GITHUB_OUTPUT
      - name: test inference server
        id: test_inference_service
        run: python3 ./github_actions/test_inference_service.py --endpoint=${{ secrets.KUBEFLOW_ENDPOINT }} --username=${{ secrets.KUBEFLOW_USERNAME }} --password=${{ secrets.KUBEFLOW_PASSWORD }} --model-name=${{ steps.output_repository_name.outputs.repository_name}} --hostname=${{ steps.output_virtual_hostname.outputs.virtual_hostname}}